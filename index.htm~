<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="jquery-1.4.1.js" type="text/javascript"></script>
    <script src="glmatrix.js" type="text/javascript"></script>

    <script src="src/rendertarget.js" type="text/javascript"></script>
    <script src="src/compositerenderer.js" type="text/javascript"></script>
    <script src="src/layer.js" type="text/javascript"></script>
    <Script src="src/world.js" type="text/javascript"></script>
    <script src="src/game.js" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var game = new Game();
            game.start();
        });
    </script>
    <style>
        body div
        {
            float: left;
            margin-left: 5px;
        }
    </style>
</head>
<body>
    <div id="container">
        <canvas id="game" width="320" height="320">

        </canvas>
    </div>
    <div id="scratch">
        
    </div>
    <div id="compositeContainer">
        
    </div>

<script type="x-shader" id="shared-vertex">
  attribute vec3 aVertexPosition;
  attribute vec2 aTextureCoords;

  uniform mat4 uProjection;
  uniform mat4 uView;
  uniform mat4 uWorld;
  varying vec2 vTextureCoords;

  void main(void){
      gl_Position =  uProjection * uView * uWorld * vec4(aVertexPosition, 1.0);
      vTextureCoords = aTextureCoords;
  }
</script>

<script type="x-shader" id="depth-fragment">
  #ifdef GL_ES
  precision highp float;
  #endif

  varying vec2 vTextureCoords;

  uniform sampler2D uColourSampler;
  uniform sampler2D uDepthSampler;
  uniform vec2 uResolution;

  vec4 sampleColourFromTextureBasedOnDepth(float depth) {
      // TODO: Sample around texture based on depth
      vec4 sample = texture2D(uColourSampler, vec2(vTextureCoords.s, vTextureCoords.t));
      sample.rgb *= (depth);
      return sample;
  }

  void main(void) {
    float realX = uResolution.x * vTextureCoords.x;
    float realZ = uResolution.y * vTextureCoords.y;
    
    vec4 depthColour = texture2D(uDepthSampler, vec2(vTextureCoords.s, vTextureCoords.t));
    vec4 colour = sampleColourFromTextureBasedOnDepth(depthColour.r);
    gl_FragColor = colour;
  }
</script>
</body>
</html>
